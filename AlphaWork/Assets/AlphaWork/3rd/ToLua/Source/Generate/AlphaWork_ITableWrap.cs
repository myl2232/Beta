//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AlphaWork_ITableWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AlphaWork.ITable), typeof(System.Object));
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("KeyName", get_KeyName, set_KeyName);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_KeyName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AlphaWork.ITable obj = (AlphaWork.ITable)o;
			string ret = obj.KeyName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index KeyName on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_KeyName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AlphaWork.ITable obj = (AlphaWork.ITable)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.KeyName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index KeyName on a nil value");
		}
	}
}

