//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AlphaWork_UGuiFormWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(AlphaWork.UGuiForm), typeof(UnityGameFramework.Runtime.UIFormLogic));
		L.RegFunction("Close", Close);
		L.RegFunction("PlayUISound", PlayUISound);
		L.RegFunction("SetMainFont", SetMainFont);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("DepthFactor", 100);
		L.RegVar("OriginalDepth", get_OriginalDepth, null);
		L.RegVar("Depth", get_Depth, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Close(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				AlphaWork.UGuiForm obj = (AlphaWork.UGuiForm)ToLua.CheckObject<AlphaWork.UGuiForm>(L, 1);
				obj.Close();
				return 0;
			}
			else if (count == 2)
			{
				AlphaWork.UGuiForm obj = (AlphaWork.UGuiForm)ToLua.CheckObject<AlphaWork.UGuiForm>(L, 1);
				bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
				obj.Close(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: AlphaWork.UGuiForm.Close");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayUISound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			AlphaWork.UGuiForm obj = (AlphaWork.UGuiForm)ToLua.CheckObject<AlphaWork.UGuiForm>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.PlayUISound(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMainFont(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.Font arg0 = (UnityEngine.Font)ToLua.CheckObject(L, 1, typeof(UnityEngine.Font));
			AlphaWork.UGuiForm.SetMainFont(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OriginalDepth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AlphaWork.UGuiForm obj = (AlphaWork.UGuiForm)o;
			int ret = obj.OriginalDepth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index OriginalDepth on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Depth(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			AlphaWork.UGuiForm obj = (AlphaWork.UGuiForm)o;
			int ret = obj.Depth;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Depth on a nil value");
		}
	}
}

