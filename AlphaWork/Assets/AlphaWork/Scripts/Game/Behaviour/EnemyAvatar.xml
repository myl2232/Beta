<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: EnemyAvatar.xml-->
<behavior name="EnemyAvatar" agenttype="EnemyAgent" version="5">
  <node class="Parallel" id="0">
    <property ChildFinishPolicy="CHILDFINISH_LOOP" />
    <property ExitPolicy="EXIT_ABORT_RUNNINGSIBLINGS" />
    <property FailurePolicy="FAIL_ON_ONE" />
    <property SuccessPolicy="SUCCEED_ON_ALL" />
    <node class="Sequence" id="1">
      <node class="WaitforSignal" id="3">
        <custom>
          <node class="Condition" id="4">
            <property Operator="Equal" />
            <property Opl="bool Self.BaseAgent::bAwakeSense" />
            <property Opr="const bool true" />
          </node>
        </custom>
      </node>
      <node class="Action" id="5">
        <property Method="Self.EnemyAgent::FlushSensor()" />
        <property ResultOption="BT_SUCCESS" />
      </node>
      <node class="Action" id="9">
        <property Method="Self.EnemyAgent::CheckSensor()" />
        <property ResultOption="BT_SUCCESS" />
      </node>
      <node class="SelectorProbability" id="2">
        <node class="DecoratorWeight" id="6">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 1" />
          <node class="Assignment" id="8">
            <property CastRight="false" />
            <property Opl="int Self.EnemyAgent::attackIndex" />
            <property Opr="const int 1" />
          </node>
        </node>
        <node class="DecoratorWeight" id="10">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 1" />
          <node class="Assignment" id="11">
            <property CastRight="false" />
            <property Opl="int Self.EnemyAgent::attackIndex" />
            <property Opr="const int 2" />
          </node>
        </node>
        <node class="DecoratorWeight" id="12">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 1" />
          <node class="Assignment" id="13">
            <property CastRight="false" />
            <property Opl="int Self.EnemyAgent::attackIndex" />
            <property Opr="const int 3" />
          </node>
        </node>
        <node class="DecoratorWeight" id="14">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 1" />
          <node class="Assignment" id="15">
            <property CastRight="false" />
            <property Opl="int Self.EnemyAgent::attackIndex" />
            <property Opr="const int 4" />
          </node>
        </node>
      </node>
      <node class="SelectorProbability" id="16">
        <node class="DecoratorWeight" id="7">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 35" />
          <node class="Assignment" id="17">
            <property CastRight="false" />
            <property Opl="float Self.EnemyAgent::attackParam" />
            <property Opr="const float 0" />
          </node>
        </node>
        <node class="DecoratorWeight" id="18">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 35" />
          <node class="Assignment" id="19">
            <property CastRight="false" />
            <property Opl="float Self.EnemyAgent::attackParam" />
            <property Opr="const float 0.5" />
          </node>
        </node>
        <node class="DecoratorWeight" id="20">
          <property DecorateWhenChildEnds="false" />
          <property Weight="const int 15" />
          <node class="Assignment" id="21">
            <property CastRight="false" />
            <property Opl="float Self.EnemyAgent::attackParam" />
            <property Opr="const float 1" />
          </node>
        </node>
      </node>
    </node>
  </node>
</behavior>